:root {
  --ratio: 1.5;
  --s-5: calc(var(--s-4) / var(--ratio));
  --s-4: calc(var(--s-3) / var(--ratio));
  --s-3: calc(var(--s-2) / var(--ratio));
  --s-2: calc(var(--s-1) / var(--ratio));
  --s-1: calc(var(--s0) / var(--ratio));
  --s0: 1rem;
  --s1: calc(var(--s0) * var(--ratio));
  --s2: calc(var(--s1) * var(--ratio));
  --s3: calc(var(--s2) * var(--ratio));
  --s4: calc(var(--s3) * var(--ratio));
  --s5: calc(var(--s4) * var(--ratio));
  --measure: 60ch;
}
* {
  max-width: var(--measure);
}
*,
*::after,
*::before {
  box-sizing: border-box;
}
html,
body,
div,
header,
nav,
main,
footer {
  max-width: none;
}

/* stack */
.el-stack {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}
.el-stack > * {
  margin-top: 0;
  margin-bottom: 0;
}
.el-stack > * + * {
  margin-top: var(--space, 1.5rem);
}
.el-stack-exception.--small {
  --space: 0.5rem;
}
.el-stack-exception.--large {
  --space: 3rem;
}

/* box */
.el-box {
  padding: var(--s1);
}
.el-box * {
  color: inherit;
}
.el-box.--padding__0 {
  padding: 0;
}

/* center */
.el-center {
  box-sizing: content-box;
  max-width: 60ch;
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--s1);
  padding-right: var(--s1);
  display: flex;
  flex-direction: column;
  align-items: center;
}
.el-center.--gutters__s-1 {
  padding-left: var(--s-1);
  padding-right: var(--s-1);
}

/* cluster */
.el-cluster {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space, 1rem);
  justify-content: center;
  align-items: center;
}
.el-cluster.--justify__space-between {
  justify-content: space-between;
}

/* sidebar */
.el-with-sidebar {
  display: flex;
  flex-wrap: wrap;
  flex-basis: 20rem;
  gap: var(--gutter, var(--s1));
}
.el-with-sidebar > .el-sidebar {
  /* flex-basis: 20rem; */
  flex-grow: 1;
}
.el-with-sidebar > .el-not-sidebar {
  flex-basis: 0;
  flex-grow: 999;
  min-width: 50%;
}

/* switcher */
.el-switcher {
  display: flex;
  flex-wrap: wrap;
  gap: var(--gutter, var(--s1));
  --threshold: 30rem;
}
.el-switcher > * {
  flex-grow: 1;
  flex-basis: calc((var(--threshold) - 100%) * 999);
}
.el-switcher > :ntn-last-child(n + 5),
.el-switcher > :ntn-last-child(n + 5) ~ * {
  flex-basis: 100%;
}

/* grid */
.el-grid {
  display: grid;
  grid-gap: 1rem;
  --minumun: 20ch;
}
@supports (width: min(var(--minumun), 100%)) {
  .el-grid {
    grid-template-columns: repeat(
      auto-fit,
      minmax(min(var(--minumun), 100%), 1fr)
    );
  }
}

.el-imposter {
  position: var(--positioning, absolute);
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.el-imposter.contain {
  --margin: 0px;
  overflow: auto;
  max-width: calc(100%- (var(--margin) * 2));
  max-height: calc(100%- (var(--margin) * 2));
}
